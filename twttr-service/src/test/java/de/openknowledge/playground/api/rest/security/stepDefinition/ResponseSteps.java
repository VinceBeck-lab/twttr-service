package de.openknowledge.playground.api.rest.security.stepDefinition;

import cucumber.api.java.en.Then;
import de.openknowledge.playground.api.rest.security.domain.tweet.TweetDTO;
import de.openknowledge.playground.api.rest.security.supportCode.SharedDomain;
import de.openknowledge.playground.api.rest.security.supportCode.converter.convertedClasses.ErrorMessage;
import io.restassured.response.Response;
import org.hamcrest.Matchers;

import javax.ws.rs.core.MediaType;

public class ResponseSteps {
    private SharedDomain domain;

    public ResponseSteps (SharedDomain domain) {
        this.domain = domain;
    }


    @Then("the HTTP response body contains following JSON of an error message:")
    public void the_HTTP_response_body_contains_following_JSON_of_an_error_message(ErrorMessage expectedErrorMessage) {
        domain.getResponse().then()
                .contentType(MediaType.APPLICATION_JSON)
                .body("errorMessage", Matchers.equalTo(expectedErrorMessage.getErrorMessage()));
    }

    @Then("the HTTP response state will be {int}")
    public void the_HTTP_response_state_will_be(Integer expectedStatusCode) {
        Response response = domain.getResponse();
        response.then()
                .statusCode(expectedStatusCode);
    }

    @Then("the HTTP response body contains following JSON of a new Tweet, while the tweetId and the publish-date got generated by the system")
    public void the_HTTP_response_body_contains_following_JSON_of_a_new_Tweet_while_the_tweetId_and_the_publish_date_got_generated_by_the_system(TweetDTO expectedTweet) {
        domain.getResponse().then()
                .contentType(MediaType.APPLICATION_JSON)
                .body("content", Matchers.equalTo(expectedTweet.getContent()))
                .body("author.firstName", Matchers.equalTo(expectedTweet.getAuthor().getFirstName()))
                .body("author.lastName", Matchers.equalTo(expectedTweet.getAuthor().getLastName()))
                .body("author.role", Matchers.equalTo(expectedTweet.getAuthor().getRole().toString()))
                .body("rootTweet", Matchers.isEmptyOrNullString());
    }
}
