Feature: Retweet a Tweet
  This feature file describes the behaviour of the REST-API for POST requests at the endpoinT /api/tweets/{tweetId}/retweets to retweet a specified tweet.
  There should be follwoing behaviour at the REST-API:
  - If the request contains the header "Authorization" with a valid token of an user, then the http response body contains a JSON of the new created retweet and the status-code will be 201
  - If the specified tweet is already a retweet, then the new created tweet has the same root-tweet as the specified tweet
  - If the request doesn´t contain a valid token of an user, then the http response status-code will be 401
  - If the request contains a valid token which belongs to a moderator, then the http response status-code will be 403
  - If the specified tweet doesn´t exist or is in status "CANCELED", then the http response status-code will be 404


  Scenario: Retweet a tweet
  Request to like a specified tweet

    Given the user "max" is authenticated
    And a stored tweet with id 1
    When a client sends a POST "/tweets/1/retweets" request for user "max" to retweet the specified tweet
    Then the client will receive the "CREATED" Status Code
    And the HTTP response body contains following JSON of a new retweet from tweet with id 1, while the tweetId and the publish-date got generated by the system
        """
          {
              "tweetId": 12,
              "content": "Example content",
              "pubDate": "04.07.2019 13:49",
              "author": {
                  "userId": 0,
                  "firstName": "Max",
                  "lastName": "Mustermann",
                  "role": "USER"
              },
              "rootTweet": {
                  "tweetId": 1,
                  "content": "Example content",
                  "pubDate": "04.07.2019 13:47",
                  "author": {
                      "userId": 0,
                      "firstName": "Max",
                      "lastName": "Mustermann",
                      "role": "USER"
                  },
                  "rootTweet": null
              }
          }
        """

  Scenario: Tweet to retweet is already a retweet
  The new created retweet will have the same rootTweet as the retweet it got retweeted from

    Given the user "max" is authenticated
    And a stored retweet with id 2 from a tweet with id 1
    When a client sends a POST "/tweets/2/retweets" request for user "max" to retweet the specified retweet
    Then the client will receive the "CREATED" Status Code
    And the responded retweet is a retweet of the tweet with id 1


  Scenario: Unauthorised request to retweet a tweet
  The request must contain a valid token of an user

    Given a stored tweet with id 1
    When a client sends a POST "/tweets/2/retweets" request without a valid token to retweet the specified tweet
    Then the client will receive the "UNAUTHORIZED" Status Code


  Scenario: Transmitted token from the request to retweet a specified tweet belongs to a moderator
  Just users can retweet tweets

    Given the moderator "werner" is authenticated
    And a stored tweet with id 1
    When a client sends a POST "/tweets/1/retweets" request for moderator "werner" to retweet the specified tweet
    Then the client will receive the "FORBIDDEN" Status Code


  Scenario: Tweet to retweet doesn´t exist
  The tweet to retweet must exist

    Given the user "max" is authenticated
    But there is no tweet with id 9999
    When a client sends a POST "/tweets/9999/retweets" request for user "max" to retweet the specified tweet
    Then the client will receive the "NOT_FOUND" Status Code


  Scenario: Tweet to retweet is in status CANCELED
  The tweet to retweet must be in status PUBLISH

    Given the user "max" is authenticated
    And a stored tweet with id 1 in status CANCELED from user max
    When a client sends a POST "/tweets/1/retweets" request for user "max" to retweet the specified tweet
    Then the client will receive the "NOT_FOUND" Status Code